Exercises

1. Write out a generic SELECT statement.

	SELECT <column>
	FROM <table>
	<optional: WHERE <condition>>

2. Create a fun way to remember the order of operations in a SELECT statement such as mnemonic.

	SELECT what you want, FROM where its located, WHERE it fits the condition stated.

3. Given this dogs table, write queries to select the following pieces of data.

	Intake teams typically guess the breed of shelter dogs, so the breed column may have multiple words
	(for example, "Labrador collie mix").
	-Display the name, gender, and age of all dogs that are part Labrador.
	
		SELECT name, gender, age FROM dogs WHERE breed LIKE '%labrador%';		

	-Display the ids of all dogs that are under 1 year old.

		SELECT id FROM dogs WHERE age<1;

	-Display the name and age of all dogs that are female and over 35lbs.

		SELECT name, age FROM dogs WHERE gender='F' AND weight>35;

	-Display all of the information about all dogs that are not Shepherd mixes.

		SELECT * FROM dogs WHERE breed NOT LIKE '%shepherd%';

	-Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.

		SELECT id, age, weight, breed FROM dogs WHERE weight>60 OR breed='great danes';




4. Given this cats table, what records are returned from these queries?

	SELECT name, adoption_date FROM cats;

	("name",   "adoption_date")
	('Mushi',    '2016-03-22' )
        ('Seashell',  NULL        )
        ('Azul',     '2016-04-17' )
        ('Victoire', '2016-09-01' )
    	('Nala',      NULL        )

	SELECT name, age FROM cats;

    	("name",    "age")
    	( 'Mushi',     1 )
    	( 'Seashell',  7 )
    	( 'Azul',      3 )
    	( 'Victoire',  7 )
    	( 'Nala',      1 )

5. From the cats table, write queries to select the following pieces of data.
	-Display all the information about all of the available cats.

		SELECT * FROM cats;

	-Display the name and sex of all cats who are 7 years old.

		SELECT name, sex FROM cats WHERE age=7;

	-Find all of the names of the cats, so you don’t choose duplicate names for new cats.
		
		SELECT name FROM cats;

6. List each comparison operator and explain when you would use it. Include a real world example for each.

< : less than. Looking for data with values less than the given value.
ex SELECT name FROM table WHERE age<17;

> : greater than. Looking for data with values greater than the given value.
ex SELECT name FROM table WHERE age>25;

<= : less than or equal to. Looking for data with values that are less than or equal to the given value.
ex SELECT id FROM table WHERE weight<=60;

>= : greater than or equal to. Looking for data with values that are greater than or equal to the given value.
ex SELECT title FROM table WHERE books_sold >=1000;

= : equal to. Looking for data equal to given values.
ex SELECT name FROM table WHERE age=25;

<> : not equal to. Looking for data not equal to given value.
ex SELECT name FROM table WHERE age<>10;

LIKE : Used to find partial matches. 
ex SELECT name FROM table WHERE name LIKE '%Sokhan%';

NOT LIKE : Used to find data that doesn't have the given string value.
ex SELECT name FROM dogs WHERE breed NOT LIKE '%pitbull%';

7. From the cats table, what data is returned from these queries?

	SELECT name FROM cats WHERE gender = ‘F’;
    	( "name"    )
    	( 'Seashell')
    	( 'Nala'    )

	SELECT name FROM cats WHERE age <> 3;
	("name"	    )
    	('Mushi'    )
    	('Seashell' )
    	('Victoire' )
    	('Nala'     )

	SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
	("id")
	(  3 )
	(  4 )




